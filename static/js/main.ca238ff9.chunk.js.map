{"version":3,"sources":["../../contracts/src/abis.js","../../contracts/src/addresses.js","img/bg.png","components/Styles.js","components/Header/HeaderStyles.js","components/Header/WalletButton.js","components/Header/TopHeader.js","components/Game/GameStyles.js","components/Game/DoubleOrNothing/ApprovalButton.js","components/Game/DoubleOrNothing/FlipAmounts.js","components/Game/DoubleOrNothing/FlipStyles.js","components/Game/DoubleOrNothing/DoubleOrNothing.js","components/DropDown/DropDownStyles.js","components/DropDown/DropDown.js","components/Game/Winnings/WinningsStyles.js","components/Game/Winnings/Winnings.js","components/Game/FlipGame.js","bscfLogo.png","HomePage.js","App.js","index.js"],"names":["abis","bscCoinFlip","bscF","addresses","bnb","Body","styled","div","img","Image","Centered","a","attrs","target","rel","p","Header","header","LeftHeader","HeaderButton","button","props","hidden","WalletButton","wrongChain","useConnect","connectData","data","connect","error","useAccount","fetchEns","account","disconnect","onClick","address","substring","connectors","map","connector","disabled","ready","name","id","TopHeader","game","chainId","useState","tokenBalance","setTokenBalance","gameStartedListener","useCallback","better","token","winner","wager","refreshTokenBalance","payoutCompleteListener","winnings","useEffect","signer","balanceOf","formatUnits","toString","console","log","on","off","GlobalContainer","GameContainer","SideContainer","Button","isDisabled","ApprovalButton","requestAllowance","parseUnits","approveContract","approve","bscfFlipAmounts","value","bnbFlipAmounts","flipAmounts","values","headsOrTails","FlipContainer","GameButton","isActive","DoubleOrNothing","gameToken","requiredAllowance","activeAmountButton","setActiveAmountButton","activeChoiceButton","setActiveChoiceButton","approved","setApproved","gameFlipAmounts","setGameFlipAmounts","gameReady","setGameReady","gameError","setGameError","gameStarted","setGameStarted","gameFinished","setGameFinished","setWinner","gameId","setGameId","handleAmountButtonClick","event","Number","handleChoiceButtonClick","showAllowances","allowance","parseInt","_hex","approvedListener","owner","spender","gameFinishedListener","_address","getGasPrice","flipAmount","side","options","estimateGas","enterGame","estimate","mul","amounts","find","startGame","gasLimit","transaction","wait","receipt","gameStartedEvent","events","args","startOver","btn","message","DropDownContainer","DropDownHeader","DropDownListContainer","DropDownList","ListItem","DropDown","onOptionClicked","selectedOption","isOpen","toggling","option","WinningsListContainer","WinningsList","WinningsListItem","Winnings","unclaimedBSCF","setUnclaimedBSCF","unclaimedBNB","setUnclaimedBNB","refreshWinnings","_winnings","bscf","claimWinnings","FlipGame","tokens","connected","setConnected","selectedToken","setSelectedToken","selectedTokenAddress","setSelectedTokenAddress","setIsOpen","HomePage","useNetwork","network","loading","useSigner","setChainId","setWrongChain","useContract","addressOrName","contractInterface","signerOrProvider","chain","src","logo","alt","App","infuraId","process","INFURA_ID","chains","defaultChains","autoConnect","rpcUrl","x","rpcUrls","mainnet","InjectedConnector","shimDisconnect","WalletConnectConnector","qrcode","WalletLinkConnector","appName","jsonRpcUrl","client","ApolloClient","uri","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ca238ff9.chunk.js","sourcesContent":["import bscCoinFlip from \"./abis/bsccoinflip.json\";\nimport bscFAbi from \"./abis/bscF.json\";\n\nconst abis = {\n  bscCoinFlip: bscCoinFlip,\n  bscF: bscFAbi,\n};\n\nexport default abis;\n","// This address points to a dummy ERC20 contract deployed on Ethereum Mainnet,\n// Goerli, Kovan, Rinkeby and Ropsten. Replace it with your smart contracts.\nconst addresses = \n{ \n  97: {\n    bnb: \"0x0000000000000000000000000000000000000000\",\n    bscCoinFlip: \"0x17C0A46388077777491810E2ac63d11Ca041e015\",\n    bscF: \"0x800CABe215158854d874f6A63e48cAB98c5Cd1Fb\",\n  }, \n  56: {\n    // TODO mainnet IDs\n    bnb: \"0x0000000000000000000000000000000000000000\",\n    bscCoinFlip: \"0x17C0A46388077777491810E2ac63d11Ca041e015\",\n    bscF: \"0x800CABe215158854d874f6A63e48cAB98c5Cd1Fb\",\n  }};\n\nexport default addresses;\n","export default __webpack_public_path__ + \"static/media/bg.b892e805.png\";","import styled from \"styled-components\";\nimport img from \"../img/bg.png\";\n\nexport const Body = styled.div`\n  align-items: center;\n  background-color: #2A2D32;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  font-size: calc(10px + 2vmin);\n  justify-content: center;\n  min-height: calc(100vh - 70px);\n\n  /* The image used */\n  background-image: url(${img});\n\n  /* Full height */\n  height: 100%;\n\n  /* Center and scale the image nicely */\n  background-position: -25% 200%;\n  background-repeat: no-repeat;\n  background-size: 50%;\n`;\n\nexport const Image = styled.img`\n  height: 40vmin;\n  margin-bottom: 16px;\n  pointer-events: none;\n`;\n\nexport const Link = styled.a.attrs({\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n})`\n  color: #61dafb;\n  margin-top: 10px;\n`;\n\nexport const Centered = styled.p`\n  text-align: center;\n`","import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  background-color: #2A2D32;\n  min-height: 70px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  color: white;\n`;\n\nexport const LeftHeader = styled.div`\n  margin-left: 12px;\n  margin-right: auto;\n`;\n\nexport const HeaderButton = styled.button`\n  background-color: #282B2E;\n  border: none;\n  border-radius: 8px;\n  color: white;\n  cursor: pointer;\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  margin: 0px 5px;\n  padding: 12px 24px;\n\n  ${props => props.hidden && \"hidden\"} :focus {\n    border: none;\n    outline: none;\n  }\n\n  &:hover {\n    background-color: #2F3236;\n    opacity: 0.8;\n  }\n`;","import { useAccount, useConnect } from 'wagmi';\n\nimport { HeaderButton } from \"./HeaderStyles\";\n\nexport const WalletButton = ({ wrongChain }) => {\n  const [{ data: connectData, error: connectError }, connect] = useConnect();\n  const [{ data: account }, disconnect] = useAccount({ fetchEns: false, });\n\n  if (account) {\n    return (\n      <div>\n        { !wrongChain && \n          <HeaderButton onClick={disconnect}>\n            {account.address.substring(0, 6)}...{account.address.substring(38)}\n          </HeaderButton>\n        }\n        { wrongChain &&\n          <HeaderButton>\n            WRONG CHAIN\n          </HeaderButton>\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {connectData.connectors.map((connector) => (\n        <HeaderButton\n          disabled={!connector.ready}\n          key={connector.id}\n          onClick={() => connect(connector)}\n        >\n          {connector.name}\n          {!connector.ready && ' (unsupported)'}\n        </HeaderButton>\n      ))}\n    </div>\n  );\n};","import { useState, useEffect, useCallback } from \"react\";\nimport { useAccount } from 'wagmi';\nimport { formatUnits } from \"@ethersproject/units\";\n\nimport { Header, LeftHeader } from \"./HeaderStyles\";\nimport { WalletButton } from \"./WalletButton\";\n\nexport const TopHeader = ({ game, bscF, chainId, wrongChain }) => {\n  const [{ data: account }, disconnect] = useAccount({ fetchEns: false, });\n  const [tokenBalance, setTokenBalance] = useState(0);\n\n  const gameStartedListener = useCallback((better, token, winner, wager, id) => {\n    if (account.address === better) {\n      refreshTokenBalance();\n    }\n  }, [game, account, chainId]);\n\n  const payoutCompleteListener = useCallback((better, token, winnings) => {\n    if (account.address === better) {\n      refreshTokenBalance();\n    }\n  }, [game, account, chainId]);\n\n  useEffect(() => {\n    refreshTokenBalance();\n  }, [game, account, chainId]);\n\n  const refreshTokenBalance = async () => {\n    if (bscF && account && bscF.signer) {\n      try {\n        const tokenBalance = await bscF.balanceOf(account.address);\n        setTokenBalance(formatUnits(tokenBalance.toString()));\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (game && game.signer) {\n      game.on(\"GameStarted\", gameStartedListener);\n      game.on(\"PayoutComplete\", payoutCompleteListener);\n    }\n\n    return () => {\n      game.off(\"GameStarted\", gameStartedListener);\n      game.off(\"PayoutComplete\", payoutCompleteListener);\n    }\n  }, [gameStartedListener, payoutCompleteListener]);\n\n  useEffect(() => {\n    refreshTokenBalance();\n  }, [bscF, account]);\n\n  return (\n    <Header>\n      <LeftHeader>\n        $BSCF balance: {tokenBalance}\n      </LeftHeader>\n      <WalletButton wrongChain={wrongChain} />\n    </Header>    \n  );\n};","import styled from \"styled-components\";\n\nexport const GlobalContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  font-size: calc(1px + 2vmin);\n  justify-content: center;\n`;\n\nexport const GameContainer = styled.div`\n  flex-grow: 3;\n`;\n\nexport const SideContainer = styled.div`\n  margin: 0px 24px;\n`;","import { parseUnits } from \"@ethersproject/units\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  background-color: #282B2E;\n  border: none;\n  border-radius: 8px;\n  color: white;\n  cursor: pointer;\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  margin: 0px 5px;\n  padding: 12px 24px;\n\n  ${props => props.hidden && \"hidden\"} :focus {\n    border: none;\n    outline: none;\n  }\n\n  ${props => !props.isDisabled && \":hover\" } {\n    background-color: #2F3236;\n    opacity: 0.8;\n  }\n`;\n\nexport const ApprovalButton = (({ bscF, game }) => {\n  const requestAllowance = parseUnits(\"1\", 25);\n\n  const approveContract = async () => {\n    try {\n      await bscF.approve(game.address, requestAllowance);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <Button onClick={approveContract}>\n      APPROVE $BSCF\n    </Button>\n  );\n});\n","import { parseUnits } from \"@ethersproject/units\";\nimport { addresses } from \"@bscflip-game/contracts\";\n\nconst bscfFlipAmounts = [\n  { id: 0, name: \"100 BSCF\", value: parseUnits(\"1\", 20) },\n  { id: 1, name: \"500 BSCF\", value: parseUnits(\"5\", 20) },\n  { id: 2, name: \"1000 BSCF\", value: parseUnits(\"1\", 21) },\n  { id: 3, name: \"5000 BSCF\", value: parseUnits(\"5\", 21) },\n];\n\nconst bnbFlipAmounts = [\n  { id: 0, name: \"0.05 BNB\", value: parseUnits(\"5\", 16) },\n  { id: 1, name: \"0.1 BNB\", value: parseUnits(\"1\", 17) },\n  { id: 2, name: \"0.5 BNB\", value: parseUnits(\"5\", 17) },\n  { id: 3, name: \"1 BNB\", value: parseUnits(\"1\", 18) },\n]\n\nexport const flipAmounts = [ \n  { token: addresses[97].bscF, values: bscfFlipAmounts },\n  { token: addresses[97].bnb, values: bnbFlipAmounts },\n  { token: addresses[56].bscF, values: bscfFlipAmounts },\n  { token: addresses[56].bnb, values: bnbFlipAmounts }\n];\n\nexport const headsOrTails = [\n  { id: 0, name: \"HEADS\", value: 0 },\n  { id: 1, name: \"TAILS\", value: 1 },\n];","import styled from \"styled-components\";\n\nexport const FlipContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const GameButton = styled.button`\n  background-color: ${props => props.isActive ? \"#F1B913\" : \"#282B2E\"};\n  border: none;\n  border-radius: 8px;\n  color: white;\n  cursor: pointer;\n  font-size: 16px;\n  text-align: center;\n  text-decoration: none;\n  margin: 0px 5px;\n  padding: 12px 24px;\n  opacity: ${props => !props.isDisabled ? 1 : 0.5};\n\n  ${props => props.hidden && \"hidden\"} :focus {\n    border: none;\n    outline: none;\n  }\n\n  ${props => !props.isDisabled && \":hover\" } {\n    background-color: ${props => props.isActive ? \"#F1B213\" : \"#2F3236\"};\n    opacity: 0.8;\n  }\n`;","import { useState, useEffect, useCallback } from \"react\";\nimport { useAccount } from \"wagmi\";\nimport { parseUnits } from \"@ethersproject/units\";\n\nimport { ApprovalButton } from \"./ApprovalButton\";\nimport { flipAmounts, headsOrTails } from \"./FlipAmounts\";\nimport { Centered } from \"../../Styles\";\nimport { FlipContainer, GameButton } from \"./FlipStyles\";\n\nexport const DoubleOrNothing = (({ gameToken, bscF, game }) => {\n  const bnb = \"0x0000000000000000000000000000000000000000\";\n  const requiredAllowance = parseUnits(\"5\", 23);\n\n  const [{ data: account }] = useAccount({ fetchEns: false, });\n  const [activeAmountButton, setActiveAmountButton] = useState(-1);\n  const [activeChoiceButton, setActiveChoiceButton] = useState(-1);\n  const [approved, setApproved] = useState(false);\n  const [gameFlipAmounts, setGameFlipAmounts] = useState(null);\n  const [gameReady, setGameReady] = useState(false);\n  const [gameError, setGameError] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameFinished, setGameFinished] = useState(false);\n  const [winner, setWinner] = useState(false);\n  const [gameId, setGameId] = useState(-1);\n  \n  const handleAmountButtonClick = event => {\n    setActiveAmountButton(Number(event.target.value));\n  };\n\n  const handleChoiceButtonClick = event => {\n    setActiveChoiceButton(Number(event.target.value));\n  };\n\n  useEffect(() => {\n    const showAllowances = async () => {\n      if (game && bscF && account && bscF.signer) {\n        try {\n          if (gameToken !== bnb) {\n            const allowance = await bscF.allowance(account.address, game.address);\n            setApproved(parseInt(allowance._hex, 16) > parseInt(requiredAllowance._hex, 16));\n            console.log(allowance._hex > requiredAllowance._hex);\n            console.log(parseInt(allowance._hex, 16));\n            console.log(parseInt(requiredAllowance._hex, 16));\n            console.log(approved);\n          } else {\n            setApproved(true);\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    showAllowances();\n  }, [account, game, bscF]);\n\n  const approvedListener = async (owner, spender, value) => {\n    try {\n      if (owner === bscF.signer) {\n        const allowance = await bscF.allowance(account.address, game.address);\n        setApproved(allowance._hex > requiredAllowance._hex);\n        console.log(\"YO\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    if (bscF && bscF.signer) {\n      bscF.on(\"Approval\", approvedListener);\n    }\n\n    return () => {\n      if (bscF && bscF.signer) {\n        bscF.off(\"Approval\", approvedListener);\n      }\n    }\n  }, [bscF]);\n\n  const gameFinishedListener = useCallback((better, token, winner, wager, id) => {\n    console.log(\"Game finished: \", better, token, winner, wager, id);\n    if (game.signer._address === better && id === gameId) {\n      setGameFinished(true);\n      setWinner(winner);\n    }\n  }, [gameId]);\n\n  useEffect(() => {\n    const amounts = flipAmounts.find(game => (game.token === gameToken));\n    setGameFlipAmounts(amounts.values);\n  }, [gameToken]);\n\n  useEffect(() => {\n    if (game && game.signer) {\n      game.on(\"GameFinished\", gameFinishedListener);\n    }\n\n    return () => {\n      game.off(\"GameFinished\", gameFinishedListener);\n    }\n  }, [gameFinishedListener]);\n\n  useEffect(() => {\n    if (activeAmountButton >= 0 && activeChoiceButton >= 0) {\n      setGameReady(true);\n    } else {\n      setGameReady(false);\n    }\n  }, [activeAmountButton, activeChoiceButton])\n\n  // Ethers has been doing a poor job of estimating gas,\n  // so increase the limit by 20% to ensure there are fewer\n  // failures on transactions\n  async function getGasPrice(flipAmount, side, address, value) {\n    var options = {\n      value: value\n    }\n    const estimate = await game.estimateGas.enterGame(flipAmount, side, address, options);\n    return estimate.mul(13).div(10);\n  }\n\n  const startGame = async () => {\n    setGameStarted(true);\n    try {\n      var flipAmount = gameFlipAmounts[activeAmountButton].value;\n      var side = headsOrTails[activeChoiceButton].value;\n      var value = (gameToken === bnb) ? flipAmount : 0;\n      var options = { \n        gasLimit: await getGasPrice(flipAmount, side, gameToken, value),\n        value: value\n      };\n      const transaction = await game.enterGame(flipAmount, side, gameToken, options);\n      const receipt = await transaction.wait();\n      const gameStartedEvent = receipt?.events.find(event => \n        (event.event === \"GameStarted\")\n      );\n      setGameId(gameStartedEvent.args[4]);\n      setGameFinished(false);\n    } catch (err) {\n      setGameError(err);\n      console.log(err);\n    }\n  };\n\n  const startOver = () => {\n    setGameId(-1);\n    setGameFinished(false);\n    setWinner(false);\n    setGameError(null);\n    setActiveAmountButton(-1);\n    setActiveChoiceButton(-1);\n    setGameStarted(false);\n  };\n\n  return (\n    <div>\n      { !approved &&\n        <ApprovalButton bscF={bscF} game={game} />\n      }\n      { approved && !gameStarted && gameFlipAmounts &&\n        <div>\n          <Centered>I LIKE</Centered>\n          <FlipContainer>\n            { headsOrTails.map(btn => \n              <GameButton\n                key={btn.name}\n                isActive={btn.id === activeChoiceButton}\n                value={btn.id}\n                onClick={handleChoiceButtonClick}>\n                {btn.name}\n              </GameButton>\n            )}\n          </FlipContainer>\n          <Centered>FOR</Centered>\n          <FlipContainer>\n            { gameFlipAmounts.map(btn => \n                <GameButton\n                  key={btn.name}\n                  isActive={btn.id === activeAmountButton}\n                  value={btn.id}\n                  onClick={handleAmountButtonClick}>\n                  {btn.name}\n                </GameButton>\n            )}\n          </FlipContainer>\n          <br />\n          <FlipContainer>\n            <GameButton \n              isDisabled={!gameReady}\n              onClick={gameReady ? startGame : null}>\n              {!gameReady && \"CHOOSE YOUR OPTIONS\"}\n              {gameReady && \"DOUBLE OR NOTHING\"}\n            </GameButton>\n          </FlipContainer> \n        </div>\n      }\n      { gameStarted && \n        <div>\n          { !gameFinished && !gameError &&\n            <div>\n              { (gameId === -1) &&\n                <Centered>WAITING FOR CONFIRMATION</Centered>\n              }\n              { (gameId >= 0) &&\n                <div>\n                  <Centered>GAME {gameId} STARTED</Centered>\n                  <Centered>WAITING FOR YOUR FLIP</Centered>\n                </div>\n              }\n            </div>\n          }\n          { !gameFinished && gameError &&\n            <div>\n              <Centered>ERROR WHEN STARTING GAME</Centered>\n              <Centered>{gameError.message.substring(0, 40) + '...'}</Centered>\n              <FlipContainer>\n                <GameButton onClick={startOver}>\n                  TRY AGAIN\n                </GameButton>\n              </FlipContainer>\n            </div>\n          }\n          { gameFinished &&\n            <div>\n              { winner ?\n                <Centered>HELL YEAH YOU WON</Centered> :\n                <Centered>GET RUGGED LOL</Centered>\n              }\n              <FlipContainer>\n                <GameButton onClick={startOver}>\n                  FLIP AGAIN\n                </GameButton>\n              </FlipContainer>\n            </div>\n          }\n        </div>\n      }\n    </div>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const DropDownContainer = styled(\"div\")`\n  width: 10.5em;\n  margin: 0 auto;\n`;\n\nexport const DropDownHeader = styled(\"div\")`\n  margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  font-weight: 500;\n  font-size: 1.3rem;\n  color: #000000;\n  background: #F1B913;\n  cursor: pointer;\n\n  &:hover {\n    background: #F1B213;\n  }\n`;\n\nexport const DropDownListContainer = styled(\"div\")``;\n\nexport const DropDownList = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #F1B913;\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n  color: #000000;\n  font-size: 1.3rem;\n  font-weight: 500;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`;\n\nexport const ListItem = styled(\"li\")`\n  list-style: none;\n  margin-bottom: 0.8em;\n  cursor: pointer;\n\n  &:hover {\n    background: #F1B213;\n  }\n`;","import { DropDownContainer, DropDownHeader, DropDownListContainer, DropDownList, ListItem } from \"./DropDownStyles\";\n\nexport const DropDown = (({ options, onOptionClicked, selectedOption, isOpen, toggling }) => {\n  return (\n      <DropDownContainer>\n        <DropDownHeader onClick={toggling}>\n          {selectedOption}\n        </DropDownHeader>\n        {isOpen && (\n          <DropDownListContainer>\n            <DropDownList>\n              {options.map(option => (\n                <ListItem onClick={onOptionClicked(option)} key={option}>\n                  {option}\n                </ListItem>\n              ))}\n            </DropDownList>\n          </DropDownListContainer>\n        )}\n      </DropDownContainer>\n  );\n});\n","import styled from \"styled-components\";\n\nexport const WinningsListContainer = styled(\"div\")``;\n\nexport const WinningsList = styled(\"ul\")`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: #F1B913;\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n  color: #000000;\n  font-size: 1.3rem;\n  font-weight: 500;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`;\n\nexport const WinningsListItem = styled(\"li\")`\n  list-style: none;\n  margin-bottom: 0.8em;\n  cursor: pointer;\n\n  &:hover {\n    background: #F1B213;\n  }\n`;","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useAccount } from 'wagmi';\nimport { formatUnits } from \"@ethersproject/units\";\n\nimport { addresses } from \"@bscflip-game/contracts\";\nimport { WinningsListContainer, WinningsList, WinningsListItem } from \"./WinningsStyles\";\n\nexport const Winnings = (({ game, chainId }) => {\n  const [{ data: account }, disconnect] = useAccount({ fetchEns: false, });\n  const [unclaimedBSCF, setUnclaimedBSCF] = useState(0);\n  const [unclaimedBNB, setUnclaimedBNB] = useState(0);\n\n  const gameFinishedListener = useCallback((better, token, winner, wager, id) => {\n    if (account.address === better) {\n      refreshWinnings();\n    }\n  }, [game, account, chainId]);\n\n  const payoutCompleteListener = useCallback((better, token, winnings) => {\n    if (account.address === better) {\n      refreshWinnings();\n    }\n  }, [game, account, chainId]);\n\n  const refreshWinnings = async() => {\n    if (game.signer && account) {\n      try {\n        const bscf = await game._winnings(account.address, addresses[chainId].bscF);\n        const bnb = await game._winnings(account.address, addresses[chainId].bnb);\n        setUnclaimedBSCF(formatUnits(bscf.toString()));\n        setUnclaimedBNB(formatUnits(bnb.toString()));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }\n\n  useEffect(() => {\n    refreshWinnings();\n  }, [game, account, chainId]);\n\n  useEffect(() => {\n    if (game && game.signer) {\n      game.on(\"GameFinished\", gameFinishedListener);\n      game.on(\"PayoutComplete\", payoutCompleteListener);\n    }\n\n    return () => {\n      game.off(\"GameFinished\", gameFinishedListener);\n      game.off(\"PayoutComplete\", payoutCompleteListener);\n    }\n  }, [gameFinishedListener, payoutCompleteListener]);\n\n  const claimWinnings = async (address) => {\n    try {\n      await game.claimWinnings(address);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <WinningsListContainer>\n      CLAIM WINNINGS:\n      <WinningsList>\n        <WinningsListItem onClick={() => claimWinnings(addresses[chainId].bscF)}>\n          BSCF: {unclaimedBSCF}\n        </WinningsListItem>\n        <WinningsListItem onClick={() => claimWinnings(addresses[chainId].bnb)}>\n          BNB: {unclaimedBNB}\n        </WinningsListItem>\n      </WinningsList>\n    </WinningsListContainer>\n  );\n});\n","import { useState, useEffect } from \"react\";\nimport { useAccount } from 'wagmi';\n\nimport { addresses } from \"@bscflip-game/contracts\";\nimport { Centered } from \"../Styles\";\nimport { GameContainer, GlobalContainer, SideContainer } from \"./GameStyles\";\nimport { DoubleOrNothing } from \"./DoubleOrNothing/DoubleOrNothing\";\nimport { DropDown } from \"../DropDown/DropDown\";\nimport { Winnings } from \"./Winnings/Winnings\";\n\nexport const FlipGame = (({ chainId, wrongChain, bscF, game }) => {\n  const tokens = [\"BSCF\", \"BNB\"];\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const [{ data: account }] = useAccount({ fetchEns: false, });\n\n  const [connected, setConnected] = useState(false);\n  const [selectedToken, setSelectedToken] = useState(tokens[0]);\n  const [selectedTokenAddress, setSelectedTokenAddress] = useState(addresses[chainId].bscF);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onOptionClicked = value => () => {\n    setSelectedToken(value);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    const showAllowances = async () => {\n      if (game && bscF && account && bscF.signer) {\n        setConnected(true);\n      }\n    };\n    showAllowances();\n  }, [account, game, bscF]);\n\n  useEffect(() => {\n    if (selectedToken === \"BNB\") {\n      setSelectedTokenAddress(addresses[chainId].bnb);\n    } else if (selectedToken === \"BSCF\") {\n      setSelectedTokenAddress(addresses[chainId].bscF);\n    }\n  }, [selectedToken, chainId]);\n\n  return (\n    <GlobalContainer>\n      <SideContainer>\n        <Winnings game={game} chainId={chainId} />\n      </SideContainer>\n      <GameContainer>\n        {!connected &&\n          <Centered>CONNECT YOUR ACCOUNT TO START FLIPPING</Centered>\n        }\n        {connected &&\n          <div>\n            <DropDown \n              options={tokens}\n              onOptionClicked={onOptionClicked}\n              selectedOption={selectedToken} \n              isOpen={isOpen}\n              toggling={toggling} />\n            <DoubleOrNothing gameToken={selectedTokenAddress} bscF={bscF} game={game} />\n          </div>\n        }\n        {wrongChain && connected &&\n          <Centered>WRONG CHAIN! PLEASE CONNECT TO BSC</Centered>\n        }\n      </GameContainer>\n    </GlobalContainer>\n  );\n});","export default __webpack_public_path__ + \"static/media/bscfLogo.b892e805.png\";","import { useState, useEffect } from \"react\";\nimport { useContract, useNetwork, useSigner } from 'wagmi'\n\nimport { addresses, abis } from \"@bscflip-game/contracts\"\n\nimport { Body, Image } from \"./components/Styles\";\nimport { TopHeader } from \"./components/Header/TopHeader\";\nimport { FlipGame } from \"./components/Game/FlipGame\";\nimport logo from \"./bscfLogo.png\";\n\nexport const HomePage = (() => {\n  const [{ data: network, error: networkError, loading: loadingNetwork }, switchNetwork] = useNetwork();\n  const [{ data: signer, error: signerError, loading: loadingSigner }, getSigner] = useSigner();\n\n  const [chainId, setChainId] = useState(56);\n  const [wrongChain, setWrongChain] = useState(false);\n\n  const bscF = useContract({\n    addressOrName: addresses[chainId].bscF,\n    contractInterface: abis.bscF,\n    signerOrProvider: signer,\n  });\n  const game = useContract({\n      addressOrName: addresses[chainId].bscCoinFlip,\n      contractInterface: abis.bscCoinFlip,\n      signerOrProvider: signer,\n  });\n\n  useEffect(() => {\n    const showAllowances = async () => {\n      if (network.chain?.id === 56) {\n        setChainId(56);\n        setWrongChain(false);\n      } else if (network.chain?.id === 97) {\n        setChainId(97);\n        setWrongChain(false);\n      } else {\n        setWrongChain(true);\n      }\n    };\n    showAllowances();\n  }, [network]);\n\n  return (\n    <div>\n      <TopHeader \n        game={game}\n        bscF={bscF}\n        chainId={chainId} \n        wrongChain={wrongChain}\n      />\n      <Body>\n        <Image src={logo} alt=\"bscflip-logo\" />\n        <FlipGame \n          chainId={chainId} \n          wrongChain={wrongChain}\n          bscF={bscF}\n          game={game}\n        />\n      </Body>\n    </div>\n  );\n});\n","import { Provider, chain, defaultChains } from 'wagmi'\nimport { InjectedConnector } from 'wagmi/connectors/injected'\nimport { WalletConnectConnector } from 'wagmi/connectors/walletConnect'\nimport { WalletLinkConnector } from 'wagmi/connectors/walletLink'\n\nimport { HomePage } from './HomePage';\n\nfunction App() {\n// API key for Ethereum node\n// Two popular services are Infura (infura.io) and Alchemy (alchemy.com)\nconst infuraId = process.env.INFURA_ID\n\n// Chains for connectors to support\nconst chains = defaultChains\n\n// Set up connectors\nconst connectors = ({ chainId }) => {\n  const rpcUrl =\n    chains.find((x) => x.id === chainId)?.rpcUrls?.[0] ??\n    chain.mainnet.rpcUrls[0]\n  return [\n    new InjectedConnector({\n      chains,\n      options: { shimDisconnect: true },\n    }),\n    new WalletConnectConnector({\n      options: {\n        infuraId,\n        qrcode: true,\n      },\n    }),\n    new WalletLinkConnector({\n      options: {\n        appName: 'BSCFlip',\n        jsonRpcUrl: `${rpcUrl}/${infuraId}`,\n      },\n    }),\n    ]\n  }\n\n  return (\n    <Provider autoConnect connectors={connectors}>\n      <HomePage />\n    </Provider>\n  );\n}\n\nexport default App;\n","import \"./index.css\";\n\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\n// You should replace this url with your own and put it into a .env file\n// See all subgraphs: https://thegraph.com/explorer/\nconst client = new ApolloClient({\n  uri: \"https://api.thegraph.com/subgraphs/name/paulrberg/create-eth-app\",\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}